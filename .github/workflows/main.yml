name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd pairdraw-back
        npm install

    - name: Run tests
      run: |
        cd pairdraw-back
        npm test
    env:
      TEST_DB_URI: ${{ secrets.TEST_DB_URI }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: needs.build-and-test.result == 'success'
    steps:
      - name: Deploy to production
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          curl "$deploy_url"

  notify:
    needs: [build-and-test, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Slack notification on success
        # Send a Slack notification if the tests and deployment are successful
        if: needs.build-and-test.result == 'success' && needs.deploy.result == 'success'
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "CI/CD process succeeded!" 
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send Slack notification on failure
        if: needs.run-tests.result != 'success' || needs.deploy.result != 'success'
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "*${{ github.workflow }}* failed. Access the details https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BOT_TOKEN }}
